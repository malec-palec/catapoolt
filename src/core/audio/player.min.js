let u = null;
const z = () => {
  u || (u = new (window.AudioContext || window.webkitAudioContext)());
  "suspended" === u.state && u.resume();
  return u;
};
window.Pico8 = function (Q, R) {
  const v = Q.split("\n"),
    E = R.split("\n");
  let I = 0;
  const g = (a, b, k) => parseInt(a.substr(b, k), 16),
    S = [
      (a) => Math.abs(2 * a - 1) - 1,
      (a) => 0.5 * (0.9 > a ? (2 * a) / 0.9 - 1 : (2 * (1 - a)) / (1 - 0.9) - 1),
      (a) => 0.6 * (0.5 > a ? a : a - 1),
      (a) => (0.5 > a ? 0.5 : -0.5),
      (a) => (0.3 > a ? 0.5 : -0.5),
      (a) => (0.5 > a ? 3 - Math.abs(24 * a - 6) : 1 - Math.abs(16 * a - 12)) / 9,
      () => {
        const a = (I + 0.02 * (2 * Math.random() - 1)) / 1.02;
        I = a;
        return 10 * a;
      },
      (a, b) => (Math.abs(((a + 0.5 * Math.abs(((b / 128) % 1) * 2 - 1)) % 1) * 4 - 2) - Math.abs(8 * a - 4)) / 6,
    ],
    J = {},
    H = (a, b) => {
      {
        const K = a + "-" + b;
        var k = J[K];
        if (!k) {
          {
            a = v[a];
            k = g(a, 2, 2);
            const T = k / 120,
              L = g(a, 4, 2),
              F = g(a, 6, 2) || 32,
              M = 44100 * F,
              N = z().createBuffer(1, M, 44100),
              A = N.getChannelData(0);
            let w = 0,
              G = 0,
              p = 0;
            var d = 24;
            let O = 260;
            var c = -1;
            let B = -1;
            var f = -1;
            let t, C, r, D, n;
            for (; w < M; ) {
              t = g(a, 8 + 5 * p, 2) + b;
              C = 65 * 2 ** (t / 12);
              r = g(a, 5 * p + 10, 1);
              D = g(a, 5 * p + 11, 1) / 8;
              n = g(a, 5 * p + 12, 1);
              var e = p + 1 >= F ? L : p + 1,
                h = g(a, 8 + 5 * e, 2) + b,
                q = g(a, 5 * e + 10, 1),
                l = g(a, 5 * e + 11, 1),
                m = g(a, 5 * e + 12, 1);
              e = 0.02;
              if (4 === n || (r === c && (t === d || 1 === n) && 0 < B && 5 !== f)) e = 0;
              d = 0.05;
              if (5 === n || (r === q && (t === h || 1 === m) && 0 < l && 4 !== m)) d = 0;
              h = (44100 * T + 0.5) | 0;
              q = 7 < r && H(r - 8, b + t - 24);
              l = 0;
              for (c = w; c < w + h; c++) {
                f = (c - w) / h;
                m = 1;
                f < e ? (m = f / e) : f > 1 - d && (m = (1 - f) / d);
                let x = C,
                  y = D;
                1 === n && ((x = (1 - f) * O + f * C), 0 < B && (y = (1 - f) * B + f * D));
                2 === n && (x *= 1 + 0.02 * Math.sin(7.5 * f));
                3 === n && (x *= 1 - f);
                4 === n && (y *= f);
                5 === n && (y *= 1 - f);
                6 <= n &&
                  (x =
                    65 *
                    2 **
                      ((g(a, 8 + 5 * ((p & -4) | (((((8 >= k ? 32 : 16) / (6 === n ? 4 : 8)) * f) | 0) & 3)), 2) + b) /
                        12));
                G += x / 44100;
                8 > r ? (A[c] += y * m * S[r](G % 1, G)) : ((A[c] += y * m * q[l]), (l = (l + 1) % q.length));
              }
              w += h;
              d = t;
              O = C;
              c = r;
              B = D;
              f = n;
              p = p + 1 >= F ? L : p + 1;
            }
            k = N;
          }
          J[K] = k;
        }
        return k;
      }
    },
    U = (a, b, k, d, c = 0) => {
      d = H(d, c).getChannelData(0);
      for (c = 0; b < k; ) ((a[b] += d[c]), (c = (c + 1) % d.length), b++);
    },
    P = (a, b = !1, k = 0) => {
      const d = z().createBufferSource();
      d.buffer = a;
      d.loop = b;
      d.loopStart = k;
      d.connect(z().destination);
      d.start();
      return d;
    };
  this.sfx = (a) => P(H(a, 0));
  this.music = (a) => {
    var b = [];
    const k = [];
    let d = 0;
    var c = 0;
    let f = E.length - 1;
    for (var e = a; e <= f; e++) {
      var h = E[e],
        q = g(h, 0, 2);
      b[e] = 0;
      for (var l = 0; 4 > l; l++) {
        var m = g(h, 3 + 2 * l, 2);
        if (m < v.length && 0 === g(v[m], 6, 2)) {
          b[e] = l;
          break;
        }
      }
      h = g(h, 3 + 2 * b[e], 2);
      h = g(v[h], 2, 2) / 120;
      k[e] = (1411200 * h + 0.5) | 0;
      1 === (q & 1) && (d = c);
      c += 32 * h;
      if (2 === (q & 2)) {
        f = e;
        break;
      }
    }
    b = 44100 * c;
    b = z().createBuffer(1, b, 44100);
    c = b.getChannelData(0);
    for (e = 0; a <= f; a++) {
      q = E[a];
      h = k[a];
      for (l = 0; 4 > l; l++) ((m = g(q, 3 + 2 * l, 2)), m < v.length && U(c, e, e + h, m));
      e += h;
    }
    return P(b, !0, d);
  };
};
